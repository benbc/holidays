#!/usr/bin/env bash
set -o pipefail -o errtrace -o errexit -o nounset
shopt -s inherit_errexit

clean

cp open-flights-data/*.dat docker/import/

echo 'id:ID,name,city,country,:IGNORE,:IGNORE,:IGNORE,:IGNORE,:IGNORE,:IGNORE,:IGNORE,:IGNORE,:IGNORE,:IGNORE' \
     >docker/import/airports-header.dat
echo ':IGNORE,:IGNORE,:IGNORE,:START_ID,:IGNORE,:END_ID,:IGNORE,:IGNORE,:IGNORE' \
     >docker/import/routes-header.dat

docker run \
       --rm \
       --name=holidays \
       --volume="$(pwd)"/docker/data:/data \
       --volume="$(pwd)"/docker/import:/import \
       neo4j:4.0 \
       neo4j-admin import --ignore-extra-columns=true --bad-tolerance=0 \
       --report-file=/data/import.report --skip-duplicate-nodes=true \
       --skip-bad-relationships=true \
       --nodes=Airport=/import/airports-header.dat,/import/airports.dat \
       --relationships=FLIGHT=/import/routes-header.dat,/import/routes.dat

docker run \
       --detach \
       --name=holidays \
       --publish=7474:7474 --publish=7687:7687 \
       --volume="$(pwd)"/docker/data:/data \
       --volume="$(pwd)"docker/import:/import \
       --env NEO4J_AUTH=none \
       neo4j:4.0

while ! docker exec --interactive holidays bin/cypher-shell 'RETURN 1;'; do
    sleep 1
done

docker exec --interactive holidays bin/cypher-shell <<EOF
MATCH (a:Airport)
    WHERE NOT (a) -[:FLIGHT]- (:Airport)
    DELETE a;

MATCH (a:Airport)
    MERGE (city:City {name: a.city, country: a.country})
    MERGE (a) -[:IN]-> (city)
    REMOVE a.city, a.country, a.id;

MATCH (city:City)
    MERGE (country:Country {name: city.country})
    MERGE (city) -[:IN]-> (country)
    REMOVE city.country;

MATCH (c1:City) <-[:IN]- (a1:Airport) -[:FLIGHT]-> (a2:Airport) -[:IN]-> (c2:City)
    MERGE (c1) -[:FLIGHT]-> (c2);

MATCH (a1:Airport) -[f:FLIGHT]-> (a2:Airport)
WITH a1, a2, collect(f) as fs
WHERE size(fs) > 1
WITH fs
foreach(f in tail(fs) | DELETE f);

MATCH (c1:City) -[f:FLIGHT]-> (c2:City)
WITH c1, c2, collect(f) as fs
WHERE size(fs) > 1
WITH fs
foreach(f in tail(fs) | DELETE f);

MATCH (c:City {name: "Doncaster, Sheffield"}) set c.name = "Sheffield";
EOF
